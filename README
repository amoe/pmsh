WHAT IS IT?
-----------
It's a small program that takes commands in text mode and allows basic
manipulation of projectM.  The idea is to let you develop presets using a
standard text editor like Emacs, the same way you would use something like 'M-x
run-scheme', or, more traditionally, reloading your file in a separate console
window.


REQUIREMENTS
------------
emacs 22 (not checked)
pulseaudio
libprojectM
SDL


FIRST
-----
Copy your favourite projectM config to either ~/etc/pmsh.inp or ~/.pmsh.inp,
whatever floats your boat.
The code builds with cmake, ignore pmsh.mk

To build:

amoe@vlinder $ cmake .
amoe@vlinder $ make
root@vlinder # make install

HOW TO USE PMSH
---------------

Commands are one letter, A-Z.  A few take an argument separated by a space (one
space max).  Leading whitespace is ignored.

x           exit
o           toggle preset lock on or off (stops preset switching automatically)
n           next preset in playlist
p           previous preset in playlist
r           reload current preset from file
c           clear playlist
i           print some debugging information on the current state
f           switch to fullscreen (unimplemented)
l <file>    load preset from <file>
d <dir>     load all presets from <dir> into playlist

Arguments don't need internal whitespace quoted, the whole rest of the line is
treated as the argument.  This allows you to more easily load traditional-ish
Milkdrop preset paths: just type "l /home/me/mypresets/Geiss - Eggs.milk".


TO USE THE EMACS MODE
-------------------------
M-x load-file
type path to milkdrop-mode.el
load .milk file
M-x milkdrop-mode

Will eventually be streamlined and given instructions to autoload


HOW TO USE INFERIOR MODE
------------------------
Make sure the 'pmsh' binary is in your path.

M-x load-file
type path to inferior-pmsh-mode.el
M-x run-pmsh

Now you can send the commands below from your preset or pmsh buffer.  Don't
complain about the length, it's Emacs policy unfortunately.

C-c ; l: load preset (type path in minibuffer)
C-c ; r: reload preset from file
C-c ; x: exit

Enjoy ;)


A NOTE ABOUT PULSE
------------------
Pulse seems to work quite badly on my system.
However, I think it's because pmsh is so slow, which is caused by a graphics
driver problem, not this code.
Therefore, a properly configured projectM shouldn't have this issue.
To test it:

First, kill any pulseaudio server you have running.
Start up one terminal.
Run 'pulseaudio -C'

Start up your PA-enabled player and start playing music.

Start up another terminal.
Run pmsh.

Now look at the first terminal, does it display any errors?
If not, all should be well.
On my system it says "Failed to push data into output queue." loads of times.


REGARDING PROJECTM 2.0
----------------------
I haven't yet had a chance to experiment with ProjectM 2.0 and new pixel shader
presets.  It's likely that pmsh does not work with them.  Fingers crossed
porting should not be a major problem.
